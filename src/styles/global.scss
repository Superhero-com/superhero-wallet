@use './typography';
@use './variables' as *;
@use './mixins';
@use './transitions';

/* Core CSS required for Ionic components to work properly */
@import '@ionic/vue/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '@ionic/vue/css/normalize.css';
@import '@ionic/vue/css/structure.css';
@import '@ionic/vue/css/typography.css';

* {
  box-sizing: border-box;
  scrollbar-width: none;
  -webkit-tap-highlight-color: transparent;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

html.is-extension {
  width: $extension-width;
  height: $extension-height;

  // Fixes issue with extension not rendering properly
  // .tabs-inner & .ion-page classes are added by Ionic
  ion-tabs,
  .tabs-inner,
  ion-router-outlet,
  .ion-page {
    contain: layout style !important;
  }

  body {
    position: unset;
  }
}

// When scanner is active we need to hide everything else
// because the scanner will show-up behind the webview
body.scanner-active {
  background-color: transparent;

  --background: transparent;
  --ion-background-color: transparent;
  --screen-bg-color: transparent;

  .app-wrapper {
    --screen-bg-color: transparent;

    background: transparent;
  }

  .ionic-wrapper {
    background-color: transparent;
  }

  #app {
    background: transparent;
    position: absolute;
    z-index: 2;
    width: 100%;
  }

  ion-content,
  .ion-content-bg,
  .ion-content-bg--lighter {
    --background: transparent;

    background: transparent;
  }
}

.ion-content-bg {
  background-color: $color-bg-app;

  &--lighter {
    background-color: $color-bg-4;
  }
}

ion-content {
  /** hide scrollbar **/
  --offset-bottom: auto !important;
  --overflow: hidden;

  overflow: auto;

  &::-webkit-scrollbar {
    display: none;
  }

  /** remove left-right padding **/
  &::part(scroll) {
    --padding-end: 0;
    --padding-start: 0;
    --padding-top: 0;
  }
}

html,
body,
#app {
  height: var(--height);
}

body,
#app {
  --ion-text-color: $color-white;

  margin: 0;
  background-color: $color-black;

  &.color-bg-app {
    background-color: $color-bg-app;
  }

  @include mixins.desktop {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}

@-moz-document url-prefix() {
  html {
    scrollbar-width: none;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

a {
  color: $color-primary;
  text-decoration: none;
  cursor: pointer;
}

p {
  margin: 0;
  word-break: break-word;

  &:not(:last-of-type) {
    margin-bottom: 8px;
  }
}

ul,
ol {
  margin: 0;
}

button {
  padding: 0;
  background: none;
  border: none;
  color: $color-grey-light;

  &:focus {
    outline: none;
  }
}

hr {
  margin: 20px calc(-1 * var(--screen-padding-x));
  border: none;
  border-bottom: 1px solid rgba($color-white, 0.06);
}

.error-msg {
  color: $color-danger;
  margin-top: 22px;
  font-size: 0.88rem;
}

.tip-note-preview {
  border-radius: 5px;
  padding: 10px;
  font-size: 14px;
  border: 1px dashed $color-white;
  margin-top: 15px;
  margin-bottom: 30px;
  text-align: left;
  word-break: break-word;
}

.text {
  &-center {
    text-align: center;
  }

  &-left {
    text-align: left;
  }

  &-right {
    text-align: right;
  }

  &-address {
    @extend %face-mono-11-medium;

    letter-spacing: 0.13em;
    color: rgba($color-white, 0.75);
    word-break: break-word;
    transition: 0.1s;

    &:hover {
      color: $color-white;
    }
  }

  &-heading-1 {
    @extend %face-sans-19-regular;

    margin-bottom: 18px;
    color: $color-white;
    text-align: center;
  }

  &-heading-2 {
    @extend %face-sans-18-medium;

    margin-bottom: 0.45em;
    color: $color-white;
  }

  &-heading-3 {
    @extend %face-sans-15-bold;

    color: $color-white;
  }

  &-muted {
    color: rgba($color-white, 0.75);
  }

  &-description {
    @extend %face-sans-15-regular;

    color: rgba($color-white, 0.85);
    text-align: left;
    white-space: pre-line;

    a {
      color: $color-primary;
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }

    strong {
      font-weight: 500;
      color: $color-white;
    }
  }
}

.label-text {
  @extend %face-sans-15-medium;

  color: $color-grey-dark;
}

.relative {
  position: relative;
}

.color {
  &-warning {
    color: $color-warning;
  }
}

.styled-scrollbar {
  scrollbar-color: #{$color-scrollbar-thumb} transparent; // Firefox
  scrollbar-width: thin; // Firefox
  -ms-overflow-style: auto;

  &::-webkit-scrollbar {
    display: block;
    width: 6px;
    height: 0;

    &-thumb {
      display: block;
      background-color: $color-scrollbar-thumb;
      border-radius: 4px;
    }
  }
}
